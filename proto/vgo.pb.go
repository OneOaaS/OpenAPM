// Code generated by protoc-gen-go.
// source: vgo.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	vgo.proto

It has these top-level messages:
	Group
	Users
	Alerts
	Reply
	Alert
	User
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Group struct {
	Id     string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Alerts map[string]*Alert `protobuf:"bytes,2,rep,name=alerts" json:"alerts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Users  map[string]*User  `protobuf:"bytes,3,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto1.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Group) GetAlerts() map[string]*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

func (m *Group) GetUsers() map[string]*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Users struct {
	GroupId string           `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Users   map[string]*User `protobuf:"bytes,2,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto1.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Users) GetUsers() map[string]*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Alerts struct {
	GroupId string            `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Alerts  map[string]*Alert `protobuf:"bytes,2,rep,name=alerts" json:"alerts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Alerts) Reset()                    { *m = Alerts{} }
func (m *Alerts) String() string            { return proto1.CompactTextString(m) }
func (*Alerts) ProtoMessage()               {}
func (*Alerts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Alerts) GetAlerts() map[string]*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type Reply struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto1.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Alert struct {
	WarnCount    int32  `protobuf:"varint,1,opt,name=warn_count,json=warnCount" json:"warn_count,omitempty"`
	CritCount    int32  `protobuf:"varint,2,opt,name=crit_count,json=critCount" json:"crit_count,omitempty"`
	WarnAlarm    string `protobuf:"bytes,3,opt,name=warn_alarm,json=warnAlarm" json:"warn_alarm,omitempty"`
	CritAlarm    string `protobuf:"bytes,4,opt,name=crit_alarm,json=critAlarm" json:"crit_alarm,omitempty"`
	WarnDuration int32  `protobuf:"varint,5,opt,name=warn_duration,json=warnDuration" json:"warn_duration,omitempty"`
	CritDuration int32  `protobuf:"varint,6,opt,name=crit_duration,json=critDuration" json:"crit_duration,omitempty"`
}

func (m *Alert) Reset()                    { *m = Alert{} }
func (m *Alert) String() string            { return proto1.CompactTextString(m) }
func (*Alert) ProtoMessage()               {}
func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type User struct {
	Name string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Info map[string]string `protobuf:"bytes,2,rep,name=info" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto1.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *User) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto1.RegisterType((*Group)(nil), "proto.Group")
	proto1.RegisterType((*Users)(nil), "proto.Users")
	proto1.RegisterType((*Alerts)(nil), "proto.Alerts")
	proto1.RegisterType((*Reply)(nil), "proto.Reply")
	proto1.RegisterType((*Alert)(nil), "proto.Alert")
	proto1.RegisterType((*User)(nil), "proto.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Alarm service

type AlarmClient interface {
	AddGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Reply, error)
	AddUsers(ctx context.Context, in *Users, opts ...grpc.CallOption) (*Reply, error)
	AddAlerts(ctx context.Context, in *Alerts, opts ...grpc.CallOption) (*Reply, error)
}

type alarmClient struct {
	cc *grpc.ClientConn
}

func NewAlarmClient(cc *grpc.ClientConn) AlarmClient {
	return &alarmClient{cc}
}

func (c *alarmClient) AddGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/proto.Alarm/AddGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmClient) AddUsers(ctx context.Context, in *Users, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/proto.Alarm/AddUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alarmClient) AddAlerts(ctx context.Context, in *Alerts, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/proto.Alarm/AddAlerts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Alarm service

type AlarmServer interface {
	AddGroup(context.Context, *Group) (*Reply, error)
	AddUsers(context.Context, *Users) (*Reply, error)
	AddAlerts(context.Context, *Alerts) (*Reply, error)
}

func RegisterAlarmServer(s *grpc.Server, srv AlarmServer) {
	s.RegisterService(&_Alarm_serviceDesc, srv)
}

func _Alarm_AddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Group)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServer).AddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Alarm/AddGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServer).AddGroup(ctx, req.(*Group))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alarm_AddUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Users)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServer).AddUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Alarm/AddUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServer).AddUsers(ctx, req.(*Users))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alarm_AddAlerts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Alerts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmServer).AddAlerts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Alarm/AddAlerts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmServer).AddAlerts(ctx, req.(*Alerts))
	}
	return interceptor(ctx, in, info, handler)
}

var _Alarm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Alarm",
	HandlerType: (*AlarmServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddGroup",
			Handler:    _Alarm_AddGroup_Handler,
		},
		{
			MethodName: "AddUsers",
			Handler:    _Alarm_AddUsers_Handler,
		},
		{
			MethodName: "AddAlerts",
			Handler:    _Alarm_AddAlerts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("vgo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x53, 0xcf, 0x6e, 0x94, 0x40,
	0x18, 0x97, 0xd9, 0x1d, 0x2c, 0x1f, 0xd4, 0x98, 0x89, 0x46, 0x96, 0xc4, 0x64, 0xc5, 0x0b, 0x9a,
	0x48, 0x74, 0x3d, 0x68, 0xbc, 0x11, 0x6d, 0x9a, 0x5e, 0x49, 0x3c, 0x37, 0xd8, 0xa1, 0x84, 0x08,
	0xcc, 0x66, 0x80, 0x9a, 0x5e, 0xbc, 0xea, 0x23, 0x78, 0xf3, 0x89, 0x7c, 0x27, 0x33, 0xdf, 0xcc,
	0xd2, 0xa1, 0x12, 0x4f, 0x3d, 0x2d, 0xf3, 0xfb, 0xb7, 0xf3, 0xfd, 0x19, 0xf0, 0xae, 0x2a, 0x91,
	0xee, 0xa5, 0x18, 0x04, 0xa3, 0xf8, 0x13, 0xff, 0x24, 0x40, 0x4f, 0xa5, 0x18, 0xf7, 0xec, 0x01,
	0x90, 0x9a, 0x87, 0xce, 0xd6, 0x49, 0xbc, 0x9c, 0xd4, 0x9c, 0xbd, 0x06, 0xb7, 0x68, 0x4a, 0x39,
	0xf4, 0x21, 0xd9, 0xae, 0x12, 0x7f, 0x17, 0x6a, 0x63, 0x8a, 0xea, 0x34, 0x43, 0xea, 0xa4, 0x1b,
	0xe4, 0x75, 0x6e, 0x74, 0xec, 0x15, 0xd0, 0xb1, 0x2f, 0x65, 0x1f, 0xae, 0xd0, 0xf0, 0x64, 0x66,
	0xf8, 0xac, 0x18, 0xad, 0xd7, 0xaa, 0xe8, 0x14, 0x7c, 0x2b, 0x85, 0x3d, 0x84, 0xd5, 0xd7, 0xf2,
	0xda, 0x5c, 0x40, 0x7d, 0xb2, 0x18, 0xe8, 0x55, 0xd1, 0x8c, 0x65, 0x48, 0xb6, 0x4e, 0xe2, 0xef,
	0x02, 0x93, 0x87, 0xa6, 0x5c, 0x53, 0x1f, 0xc8, 0x7b, 0x27, 0x3a, 0x01, 0xb8, 0x49, 0x5f, 0xc8,
	0x79, 0x36, 0xcf, 0xf1, 0x4d, 0x8e, 0xf2, 0x58, 0x31, 0xf1, 0x2f, 0x07, 0x28, 0xe6, 0xb0, 0x0d,
	0x1c, 0x55, 0xea, 0xd2, 0xe7, 0x53, 0x43, 0xee, 0xe3, 0xf9, 0x8c, 0xdf, 0xd4, 0x48, 0x66, 0x35,
	0xa2, 0x6f, 0xa1, 0xc6, 0x3b, 0xba, 0xda, 0x6f, 0x07, 0x5c, 0xdd, 0xab, 0xff, 0xdd, 0xed, 0xcd,
	0xad, 0x89, 0x6d, 0xec, 0x86, 0xf5, 0x4b, 0x23, 0xbb, 0xb3, 0x19, 0xc4, 0x1b, 0xa0, 0x79, 0xb9,
	0x6f, 0x30, 0xa2, 0xed, 0xab, 0x43, 0x44, 0xdb, 0x57, 0xf1, 0x1f, 0x07, 0x28, 0xea, 0xd9, 0x53,
	0x80, 0x6f, 0x85, 0xec, 0xce, 0x2f, 0xc4, 0xd8, 0x0d, 0x28, 0xa1, 0xb9, 0xa7, 0x90, 0x8f, 0x0a,
	0x50, 0xf4, 0x85, 0xac, 0x07, 0x43, 0x13, 0x4d, 0x2b, 0x64, 0xa2, 0xd1, 0x5d, 0x34, 0x85, 0x6c,
	0xc3, 0x15, 0xfe, 0x01, 0xba, 0x33, 0x05, 0x4c, 0x6e, 0x4d, 0xaf, 0x35, 0xad, 0x10, 0x4d, 0x3f,
	0x87, 0x63, 0x74, 0xf3, 0x51, 0x16, 0x43, 0x2d, 0xba, 0x90, 0x62, 0x7e, 0xa0, 0xc0, 0x4f, 0x06,
	0x53, 0x22, 0xcc, 0x98, 0x44, 0xae, 0x16, 0x29, 0xf0, 0x20, 0x8a, 0xbf, 0xc3, 0x5a, 0xcd, 0x87,
	0x31, 0x58, 0x77, 0x45, 0x5b, 0x9a, 0x52, 0xf1, 0x9b, 0xbd, 0x80, 0x75, 0xdd, 0x5d, 0x0a, 0x33,
	0x80, 0xc7, 0xd6, 0x38, 0xd3, 0xb3, 0xee, 0x52, 0xe8, 0xe6, 0xa3, 0x24, 0x7a, 0x07, 0xde, 0x04,
	0x2d, 0x34, 0xfe, 0x91, 0xdd, 0x78, 0xcf, 0x6a, 0xf5, 0xee, 0x07, 0xf6, 0x53, 0xd5, 0x94, 0xc0,
	0x51, 0xc6, 0xb9, 0x7e, 0xbe, 0x81, 0xfd, 0xda, 0xa2, 0xc3, 0x09, 0x67, 0x12, 0xdf, 0x33, 0x4a,
	0xbd, 0xdd, 0x81, 0xbd, 0xb3, 0xff, 0x28, 0x5f, 0x82, 0x97, 0x71, 0x6e, 0x96, 0xed, 0x78, 0xb6,
	0x41, 0xb7, 0xb5, 0x5f, 0x5c, 0x3c, 0xbe, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xf5, 0x96,
	0x0a, 0x57, 0x04, 0x00, 0x00,
}
